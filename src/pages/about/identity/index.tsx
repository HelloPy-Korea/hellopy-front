import introShape from "@/assets/img/about/intro_shape.png";
import PymonImg1 from "@/assets/img/about/img_type1.png";
import PymonImg2 from "@/assets/img/about/img_type2.png";
import PymonImg3 from "@/assets/img/about/img_type3.png";
import HellopyKrImg from "@/assets/img/logo/img_hellopy_kr.jpeg";
import HellopyEnImg from "@/assets/img/logo/img_hellopy_en.jpeg";
import HellopyEnDownloadImg from "@/assets/img/logo/img_hellopy_en_download.png";
import HellopyKrDownloadImg from "@/assets/img/logo/img_hellopy_kr_download.png";

import { AboutSection, AboutSectionTitle } from "@/components/AboutSection";
import { TextCircleGroup } from "@/components/TextCircle";
import * as React from "react";
import {
  LogoBanner,
  LogoBannerImage,
  LogoBannerLink,
  LogoBannerTitle,
} from "@/components/LogoBanner";
import { SelectBox } from "@/components/SelectBox";
import { PymonCalendar } from "@/components/PymonCalendar/PymonCalendar.tsx";
import { useEffect, useState } from "react";
import { SelectValue } from "@/types/common.ts";
import { Container } from "@/components/Container";

const keywordList = [
  ["Neat", "ÍπîÎÅî"],
  ["Warm", "Îî∞Îúª"],
  ["Embrace", "Ìè¨Ïö©"],
  ["Relief", "ÏïàÏ†Ñ"],
  ["Growth", "ÏÑ±Ïû•"],
].map(([text, subText]) => (
  <React.Fragment key={text}>
    <p className="font-light">{text}</p>
    <p>{subText}</p>
  </React.Fragment>
));

const selectedOptions = [
  { label: "2023ÎÖÑ", value: "2023" },
  { label: "2024ÎÖÑ", value: "2024" },
  { label: "2025ÎÖÑ", value: "2025" },
];

const AboutIdentity = () => {
  const [yearList, setYearList] = useState<SelectValue[]>([]);
  const [selectedYear, setSelectedYear] = useState<number>(2025);

  useEffect(() => {
    setYearList(
      selectedOptions.map(
        (option) =>
          ({
            ...option,
            checked: option.value === String(selectedYear),
          }) as SelectValue,
      ),
    );
  }, []);

  const onSelectYear = (value: string) => {
    setSelectedYear(Number(value));
    setYearList(
      selectedOptions.map(
        (option) =>
          ({ ...option, checked: option.value === value }) as SelectValue,
      ),
    );
  };

  return (
    <div className="align-center flex flex-col">
      <AboutSection>
        <AboutSectionTitle
          title={"HelloPY ÌÇ§ÏõåÎìú"}
          subtitle={"Identity Keywords"}
          description={[]}
        />
        <TextCircleGroup textList={keywordList} size={238} overlap={5} />
      </AboutSection>

      <div className={"bg-[#FCF7FF]"}>
        <Container>
          <img
            src={introShape}
            className="h-auto w-full object-cover"
            alt="Intro Shape"
          />
        </Container>
      </div>

      <AboutSection>
        <AboutSectionTitle
          title={"HelloPY Î°úÍ≥†"}
          subtitle={"LOGO"}
          description={[
            "HelloPYÎäî Hello, PythonÏùÑ Ìï©Ïπú Í≤ÉÏúºÎ°ú ÌååÏù¥Ïç¨ ÏûÖÎ¨∏Ïûê ÏàòÏ§ÄÏùò Ï£ºÎãàÏñ¥ Ïª§ÎÆ§ÎãàÌã∞Î•º ÏùòÎØ∏Ìï©ÎãàÎã§.",
            "Í∞ÄÏö¥Îç∞ ÌååÏù¥Ïç¨ Î°úÍ≥†Î•º ÎÑ£Ïñ¥ ÌååÏù¥Ïç¨ Ïª§ÎÆ§ÎãàÌã∞ÏûÑÏùÑ ÏßÅÍ¥ÄÏ†ÅÏúºÎ°ú ÌëúÌòÑÌï©ÎãàÎã§.",
          ]}
        />
        <div className="flex w-full justify-between gap-10">
          <LogoBanner>
            <LogoBannerTitle>HELLOPY LOGO EN</LogoBannerTitle>
            <LogoBannerImage src={HellopyEnImg} />
            <LogoBannerLink
              href={HellopyEnDownloadImg}
              downloadName="hellopy_logo_en.png"
            >
              ÏòÅÏñ¥Î°úÍ≥† Îã§Ïö¥Î∞õÍ∏∞
            </LogoBannerLink>
          </LogoBanner>
          <LogoBanner>
            <LogoBannerTitle>HELLOPY LOGO KR</LogoBannerTitle>
            <LogoBannerImage src={HellopyKrImg} />
            <LogoBannerLink
              href={HellopyKrDownloadImg}
              downloadName="hellopy_logo_kr.png"
            >
              ÌïúÍµ≠Ïñ¥Î°úÍ≥† Îã§Ïö¥Î∞õÍ∏∞
            </LogoBannerLink>
          </LogoBanner>
        </div>
      </AboutSection>

      <AboutSection>
        <AboutSectionTitle
          title={"PYMON"}
          subtitle={"Character"}
          description={[
            "ÌååÏù¥Î™¨ÏùÄ PythonÏùò PyÍ∞Ä ÏïÑÎãå œÄ Î™®ÏñëÏùÑ Ìïú Ï∫êÎ¶≠ÌÑ∞Î°ú, 2024ÎÖÑ 9Ïõî 21ÏùºÏóê ÌÉúÏñ¥ÎÇ¨ÏäµÎãàÎã§. ü•≥",
            "ÏÇ¨ÎûåÍ≥º Ïª§ÎÆ§ÎãàÌã∞Î•º Ï¢ãÏïÑÌïòÍ≥†, Î∏îÎ£®Î≤†Î¶¨ ÌååÏù¥Î•º Ï¢ãÏïÑÌïúÎã§Í≥† Ìï©ÎãàÎã§. ü´êü•ß",
          ]}
        />
        <div className="relative flex flex-wrap items-center justify-center gap-6 md:gap-[52px]">
          {[PymonImg1, PymonImg2, PymonImg3].map((pymon, index) => (
            <img
              key={index}
              className="relative sm:h-[300px] sm:w-[200px] md:h-[330px] md:w-[220px] lg:h-[386px] lg:w-[254px]"
              style={{ objectFit: "cover" }}
              src={pymon}
            />
          ))}
        </div>
      </AboutSection>

      <div className={"bg-[#FCF7FF]"}>
        <AboutSection>
          <AboutSectionTitle
            title={"ÏõîÍ∞Ñ PYMON"}
            subtitle={"Wallpaper"}
            description={[
              "PYMONüëæ Îã¨Î†• Î∞∞Í≤ΩÌôîÎ©¥ÏùÑ Ï§ÄÎπÑÌñàÏäµÎãàÎã§! üíú ÎàÑÍµ¨ÎÇò Ïù¥ÎØ∏ÏßÄ Îã§Ïö¥Î°úÎìú ÌõÑ ÏÇ¨Ïö©ÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§üòÜ",
              "Ïù¥ÎØ∏ÏßÄÎ•º Íæ∏Ïö± ÎàÑÎ•¥Î©¥ Ïó¥Î¶¨Îäî ÌåùÏóÖÏóêÏÑú ‚ÄúÎÇ¥ Ìè∞Ïóê Ï†ÄÏû•‚Äù ÌòπÏùÄ ‚ÄúÏÇ¨ÏßÑ Îã§Ïö¥Î°úÎìú‚ÄùÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî!",
              "Ìó¨Î°úÌååÏù¥ÏóêÏÑúÎäî Îß§Îã¨ ÏÉàÎ°úÏö¥ Îã¨Î†•ÏùÑ ÎîîÏûêÏù∏Ìï¥ÏÑú Í≥µÏú†ÌïòÍ≥† ÏûàÏñ¥Ïöî. Îã§Ïùå Îã¨Ïùò Îã¨Î†•ÎèÑ Í∏∞ÎåÄÌï¥ Ï£ºÏÑ∏Ïöî! ‚òòÔ∏è",
            ]}
          />
          <SelectBox options={yearList} onSelect={onSelectYear} />
          <PymonCalendar selectedYear={selectedYear} />
        </AboutSection>
      </div>
    </div>
  );
};

export default AboutIdentity;
